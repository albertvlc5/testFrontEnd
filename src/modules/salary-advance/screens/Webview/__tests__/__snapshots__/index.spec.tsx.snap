// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Webview Screen should render component 1`] = `
Array [
  <View
    bg="fullTransparent"
    pt="spacing8px"
    style={
      Array [
        Object {
          "backgroundColor": "rgba(255, 255, 255, 0)",
          "paddingTop": 8,
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "height": 48,
            "justifyContent": "center",
            "marginTop": 20,
          },
        ]
      }
    >
      <View
        alignItems="center"
        flexDirection="row"
        justifyContent="space-between"
        pl="spacing24px"
        pr="spacing24px"
        style={
          Array [
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "space-between",
              "paddingLeft": 24,
              "paddingRight": 24,
            },
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "width": 40,
              },
            ]
          }
          width={40}
        >
          <View
            iconRotation={null}
            style={
              Array [
                Object {},
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "rgba(255, 255, 255, 0)",
                    "borderRadius": 8,
                    "height": 40,
                    "justifyContent": "center",
                    "width": 40,
                  },
                ]
              }
            >
              <RNSVGSvgView
                align="xMidYMid"
                bbHeight="24"
                bbWidth="24"
                focusable={false}
                height="24"
                meetOrSlice={0}
                minX={0}
                minY={0}
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderWidth": 0,
                    },
                    Object {
                      "transform": Array [
                        Object {
                          "rotate": "180deg",
                        },
                      ],
                    },
                    Object {
                      "opacity": 1,
                    },
                    Object {
                      "flex": 0,
                      "height": 24,
                      "width": 24,
                    },
                  ]
                }
                vbHeight={24}
                vbWidth={24}
                width="24"
                x="0"
                y="0"
              >
                <RNSVGGroup
                  fill={
                    Array [
                      0,
                      4278190080,
                    ]
                  }
                  fillOpacity={1}
                  fillRule={1}
                  font={Object {}}
                  matrix={
                    Array [
                      1,
                      0,
                      0,
                      1,
                      0,
                      0,
                    ]
                  }
                  opacity={1}
                  originX={0}
                  originY={0}
                  propList={Array []}
                  rotation={0}
                  scaleX={1}
                  scaleY={1}
                  skewX={0}
                  skewY={0}
                  stroke={null}
                  strokeDasharray={null}
                  strokeDashoffset={null}
                  strokeLinecap={0}
                  strokeLinejoin={0}
                  strokeMiterlimit={4}
                  strokeOpacity={1}
                  strokeWidth={1}
                  vectorEffect={0}
                  x={0}
                  y={0}
                >
                  <RNSVGPath
                    d="M21.8,12.7L21.8,12.7C21.8,12.7,21.8,12.7,21.8,12.7C21.7,12.8,21.7,12.8,21.8,12.7
C21.7,12.8,21.7,12.8,21.8,12.7l-0.1,0.1c0,0,0,0,0,0l0,0l-8.7,8.7c-0.5,0.5-1.3,0.5-1.8,0c-0.5-0.5-0.5-1.2-0.1-1.7l0.1-0.1
l6.6-6.6H3.2C2.6,13.2,2,12.7,2,12c0-0.7,0.5-1.2,1.2-1.2l0.1,0h14.5l-6.6-6.6c-0.5-0.5-0.5-1.2-0.1-1.7l0.1-0.1
c0.5-0.5,1.2-0.5,1.7-0.1l0.1,0.1l8.7,8.8c0,0,0,0,0.1,0.1l-0.1-0.1c0,0,0.1,0.1,0.1,0.1c0,0,0,0,0,0.1c0,0,0,0,0,0c0,0,0,0,0,0.1
c0,0,0,0,0,0c0.1,0.1,0.1,0.2,0.1,0.4c0,0,0,0,0,0c0,0,0,0,0,0.1c0,0,0,0,0,0c0,0,0,0,0,0.1c0,0,0,0,0,0c0,0,0,0,0,0l0,0
c0,0,0,0,0,0l0-0.1c0,0,0,0.1,0,0.1c0,0,0,0,0,0c0,0,0,0,0,0.1c0,0,0,0,0,0c0,0,0,0,0,0c0,0,0,0,0,0.1c0,0,0,0,0,0c0,0,0,0,0,0
c0,0,0,0,0,0.1c0,0,0,0,0,0l0,0C21.8,12.6,21.8,12.7,21.8,12.7z"
                    fill={
                      Array [
                        0,
                        4283786854,
                      ]
                    }
                    fillOpacity={1}
                    fillRule={0}
                    matrix={
                      Array [
                        1,
                        0,
                        0,
                        1,
                        0,
                        0,
                      ]
                    }
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                        "fillRule",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth={1}
                    vectorEffect={0}
                    x={0}
                    y={0}
                  />
                  <RNSVGRect
                    fill={null}
                    fillOpacity={1}
                    fillRule={1}
                    height="24"
                    matrix={
                      Array [
                        0.7071067811865476,
                        0.7071067811865475,
                        -0.7071067811865475,
                        0.7071067811865476,
                        32.5,
                        -13.46194077712559,
                      ]
                    }
                    opacity={1}
                    originX={0}
                    originY={0}
                    propList={
                      Array [
                        "fill",
                      ]
                    }
                    rotation={0}
                    scaleX={1}
                    scaleY={1}
                    skewX={0}
                    skewY={0}
                    stroke={null}
                    strokeDasharray={null}
                    strokeDashoffset={null}
                    strokeLinecap={0}
                    strokeLinejoin={0}
                    strokeMiterlimit={4}
                    strokeOpacity={1}
                    strokeWidth={1}
                    vectorEffect={0}
                    width="24"
                    x="0"
                    y="0"
                  />
                </RNSVGGroup>
              </RNSVGSvgView>
            </View>
          </View>
        </View>
        <View
          flex={1}
          pl="spacing8px"
          pr="spacing8px"
          style={
            Array [
              Object {
                "flexBasis": 0,
                "flexGrow": 1,
                "flexShrink": 1,
                "paddingLeft": 8,
                "paddingRight": 8,
              },
            ]
          }
        />
        <View
          flexDirection="row"
          minWidth={40}
          style={
            Array [
              Object {
                "flexDirection": "row",
                "minWidth": 40,
              },
            ]
          }
        />
      </View>
    </View>
  </View>,
  <View
    style={
      Array [
        Object {
          "flex": 1,
          "overflow": "hidden",
        },
        undefined,
      ]
    }
  >
    <RNCWebView
      cacheEnabled={true}
      injectedJavaScriptBeforeContentLoaded="
  window.localStorage.setItem('fromNativeApp', true);
      window.localStorage.setItem('accessToken', 'Bearer ');"
      injectedJavaScriptBeforeContentLoadedForMainFrameOnly={true}
      injectedJavaScriptForMainFrameOnly={true}
      javaScriptEnabled={true}
      messagingEnabled={false}
      onContentProcessDidTerminate={[Function]}
      onHttpError={[Function]}
      onLoadingError={[Function]}
      onLoadingFinish={[Function]}
      onLoadingProgress={[Function]}
      onLoadingStart={[Function]}
      onMessage={[Function]}
      onShouldStartLoadWithRequest={[Function]}
      source={
        Object {
          "uri": "https://payroll-legacy.stg.creditas.io/consignado/dashboard?scrollTo=salaryAdvance&utm_source=app-creditas&mobile-app=header-global,breadcrumbs,section-footer-homepage",
        }
      }
      style={
        Array [
          Object {
            "flex": 1,
            "overflow": "hidden",
          },
          Object {
            "backgroundColor": "#ffffff",
          },
          undefined,
        ]
      }
      useSharedProcessPool={true}
    />
  </View>,
]
`;
