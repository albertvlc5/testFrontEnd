// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HomeErrorFeedback When service issues occur renders correctly with a service feedback 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": "#ffffff",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 0,
        "paddingLeft": 20,
        "paddingRight": 20,
        "paddingTop": 0,
      },
    ]
  }
>
  <RNSVGSvgView
    align="xMidYMid"
    bbHeight={140}
    bbWidth={140}
    fill="none"
    focusable={false}
    height={140}
    meetOrSlice={0}
    minX={0}
    minY={0}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "borderWidth": 0,
        },
        undefined,
        Object {
          "opacity": 1,
        },
        Object {
          "flex": 0,
          "height": 140,
          "width": 140,
        },
      ]
    }
    vbHeight={140}
    vbWidth={140}
    width={140}
  >
    <RNSVGGroup
      fill={null}
      fillOpacity={1}
      fillRule={1}
      font={Object {}}
      matrix={
        Array [
          1,
          0,
          0,
          1,
          0,
          0,
        ]
      }
      opacity={1}
      originX={0}
      originY={0}
      propList={
        Array [
          "fill",
        ]
      }
      rotation={0}
      scaleX={1}
      scaleY={1}
      skewX={0}
      skewY={0}
      stroke={null}
      strokeDasharray={null}
      strokeDashoffset={null}
      strokeLinecap={0}
      strokeLinejoin={0}
      strokeMiterlimit={4}
      strokeOpacity={1}
      strokeWidth={1}
      vectorEffect={0}
      x={0}
      y={0}
    >
      <RNSVGPath
        d="M51.2071 49.2929C50.8166 48.9024 50.1834 48.9024 49.7929 49.2929C49.4024 49.6834 49.4024 50.3166 49.7929 50.7071L69.0858 70.0001L49.793 89.2929C49.4025 89.6834 49.4025 90.3166 49.793 90.7071C50.1835 91.0976 50.8167 91.0976 51.2072 90.7071L70.5001 71.4143L89.7929 90.7071C90.1834 91.0976 90.8166 91.0976 91.2071 90.7071C91.5976 90.3166 91.5976 89.6834 91.2071 89.2929L71.9143 70.0001L91.2072 50.7071C91.5978 50.3166 91.5978 49.6834 91.2072 49.2929C90.8167 48.9024 90.1835 48.9024 89.793 49.2929L70.5001 68.5858L51.2071 49.2929Z"
        fill={
          Array [
            0,
            4292927712,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
      <RNSVGCircle
        cx="70.5"
        cy="70"
        fill={
          Array [
            0,
            4278190080,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "stroke",
          ]
        }
        r="59"
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={
          Array [
            0,
            4293585642,
          ]
        }
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGGroup>
  </RNSVGSvgView>
  <Text
    color="neutral8"
    strikeThrough={false}
    style={
      Array [
        Object {
          "color": "#334444",
          "fontFamily": "HelveticaNowDisplay-Bold",
          "fontSize": 16,
          "lineHeight": 20,
          "textAlign": "center",
          "textDecorationColor": "#334444",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
        },
        Object {
          "marginBottom": 8,
          "marginTop": 16,
        },
      ]
    }
    testID="title"
    textAlign="center"
    underlined={false}
    variant="mockTokenHelveticaParagraphTextBold"
  >
    ERROR_FEEDBACK.NO_SERVICE.TITLE
  </Text>
  <Text
    color="neutral5"
    strikeThrough={false}
    style={
      Array [
        Object {
          "color": "#aabbbb",
          "fontFamily": "HelveticaNowDisplay-Regular",
          "fontSize": 16,
          "lineHeight": 20,
          "textAlign": "center",
          "textDecorationColor": "#aabbbb",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
        },
        Object {
          "marginBottom": 16,
          "paddingBottom": 0,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 0,
        },
      ]
    }
    testID="description"
    textAlign="center"
    underlined={false}
    variant="mockTokenHelveticaParagraphTextRegular"
  >
    ERROR_FEEDBACK.NO_SERVICE.DESCRIPTION
  </Text>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "height": 54,
        "justifyContent": "center",
        "opacity": 1,
        "paddingBottom": 17,
        "paddingLeft": 20,
        "paddingRight": 20,
        "paddingTop": 17,
      }
    }
    testID="tryAgainButton"
  >
    <Text
      color="primary3"
      strikeThrough={false}
      style={
        Array [
          Object {
            "color": "#11bb77",
            "fontFamily": "HelveticaNowDisplay-Medium",
            "fontSize": 16,
            "lineHeight": 20,
            "textAlign": "center",
            "textDecorationColor": "#11bb77",
            "textDecorationLine": "none",
            "textDecorationStyle": "solid",
          },
        ]
      }
      textAlign="center"
      underlined={false}
      variant="mockTokenHelveticaDisplayMedium"
    >
      ERROR_FEEDBACK.TRY_AGAIN.BUTTON_LABEL
    </Text>
  </View>
</View>
`;

exports[`HomeErrorFeedback When user has network issues renders correctly with a network feedback 1`] = `
<View
  style={
    Array [
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "backgroundColor": "#ffffff",
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "justifyContent": "center",
        "paddingBottom": 0,
        "paddingLeft": 20,
        "paddingRight": 20,
        "paddingTop": 0,
      },
    ]
  }
>
  <RNSVGSvgView
    align="xMidYMid"
    bbHeight={140}
    bbWidth={140}
    fill="none"
    focusable={false}
    height={140}
    meetOrSlice={0}
    minX={0}
    minY={0}
    style={
      Array [
        Object {
          "backgroundColor": "transparent",
          "borderWidth": 0,
        },
        undefined,
        Object {
          "opacity": 1,
        },
        Object {
          "flex": 0,
          "height": 140,
          "width": 140,
        },
      ]
    }
    vbHeight={140}
    vbWidth={140}
    width={140}
  >
    <RNSVGGroup
      fill={null}
      fillOpacity={1}
      fillRule={1}
      font={Object {}}
      matrix={
        Array [
          1,
          0,
          0,
          1,
          0,
          0,
        ]
      }
      opacity={1}
      originX={0}
      originY={0}
      propList={
        Array [
          "fill",
        ]
      }
      rotation={0}
      scaleX={1}
      scaleY={1}
      skewX={0}
      skewY={0}
      stroke={null}
      strokeDasharray={null}
      strokeDashoffset={null}
      strokeLinecap={0}
      strokeLinejoin={0}
      strokeMiterlimit={4}
      strokeOpacity={1}
      strokeWidth={1}
      vectorEffect={0}
      x={0}
      y={0}
    >
      <RNSVGPath
        d="M29.1665 73.2083C40.6965 63.6047 55.2275 58.3457 70.2332 58.3457C85.2388 58.3457 99.7699 63.6047 111.3 73.2083"
        fill={
          Array [
            0,
            4278190080,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "stroke",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={
          Array [
            0,
            4292927712,
          ]
        }
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
      <RNSVGPath
        d="M8.2832 52.5C25.3307 37.4731 47.2749 29.1821 69.9999 29.1821C92.7248 29.1821 114.669 37.4731 131.717 52.5"
        fill={
          Array [
            0,
            4278190080,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "stroke",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={
          Array [
            0,
            4292927712,
          ]
        }
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
      <RNSVGPath
        d="M49.7583 93.975C55.6803 89.7677 62.7647 87.5073 70.0291 87.5073C77.2935 87.5073 84.378 89.7677 90.3 93.975"
        fill={
          Array [
            0,
            4278190080,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "stroke",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={
          Array [
            0,
            4292927712,
          ]
        }
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
      <RNSVGPath
        d="M72.7929 108.293C73.1834 107.902 73.8166 107.902 74.2071 108.293C74.5976 108.683 74.5976 109.317 74.2071 109.707L70.9142 113L74.2071 116.293C74.5976 116.683 74.5976 117.317 74.2071 117.707C73.8166 118.098 73.1834 118.098 72.7929 117.707L69.5 114.414L66.2071 117.707C65.8166 118.098 65.1834 118.098 64.7929 117.707C64.4024 117.317 64.4024 116.683 64.7929 116.293L68.0858 113L64.7929 109.707C64.4024 109.317 64.4024 108.683 64.7929 108.293C65.1834 107.902 65.8166 107.902 66.2071 108.293L69.5 111.586L72.7929 108.293Z"
        fill={
          Array [
            0,
            4292927712,
          ]
        }
        fillOpacity={1}
        fillRule={1}
        matrix={
          Array [
            1,
            0,
            0,
            1,
            0,
            0,
          ]
        }
        opacity={1}
        originX={0}
        originY={0}
        propList={
          Array [
            "fill",
          ]
        }
        rotation={0}
        scaleX={1}
        scaleY={1}
        skewX={0}
        skewY={0}
        stroke={null}
        strokeDasharray={null}
        strokeDashoffset={null}
        strokeLinecap={0}
        strokeLinejoin={0}
        strokeMiterlimit={4}
        strokeOpacity={1}
        strokeWidth={1}
        vectorEffect={0}
        x={0}
        y={0}
      />
    </RNSVGGroup>
  </RNSVGSvgView>
  <Text
    color="neutral8"
    strikeThrough={false}
    style={
      Array [
        Object {
          "color": "#334444",
          "fontFamily": "HelveticaNowDisplay-Bold",
          "fontSize": 16,
          "lineHeight": 20,
          "textAlign": "center",
          "textDecorationColor": "#334444",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
        },
        Object {
          "marginBottom": 8,
          "marginTop": 16,
        },
      ]
    }
    testID="title"
    textAlign="center"
    underlined={false}
    variant="mockTokenHelveticaParagraphTextBold"
  >
    ERROR_FEEDBACK.NO_INTERNET.TITLE
  </Text>
  <Text
    color="neutral5"
    strikeThrough={false}
    style={
      Array [
        Object {
          "color": "#aabbbb",
          "fontFamily": "HelveticaNowDisplay-Regular",
          "fontSize": 16,
          "lineHeight": 20,
          "textAlign": "center",
          "textDecorationColor": "#aabbbb",
          "textDecorationLine": "none",
          "textDecorationStyle": "solid",
        },
        Object {
          "marginBottom": 16,
          "paddingBottom": 0,
          "paddingLeft": 12,
          "paddingRight": 12,
          "paddingTop": 0,
        },
      ]
    }
    testID="description"
    textAlign="center"
    underlined={false}
    variant="mockTokenHelveticaParagraphTextRegular"
  >
    ERROR_FEEDBACK.NO_INTERNET.DESCRIPTION
  </Text>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "stretch",
        "height": 54,
        "justifyContent": "center",
        "opacity": 1,
        "paddingBottom": 17,
        "paddingLeft": 20,
        "paddingRight": 20,
        "paddingTop": 17,
      }
    }
    testID="tryAgainButton"
  >
    <Text
      color="primary3"
      strikeThrough={false}
      style={
        Array [
          Object {
            "color": "#11bb77",
            "fontFamily": "HelveticaNowDisplay-Medium",
            "fontSize": 16,
            "lineHeight": 20,
            "textAlign": "center",
            "textDecorationColor": "#11bb77",
            "textDecorationLine": "none",
            "textDecorationStyle": "solid",
          },
        ]
      }
      textAlign="center"
      underlined={false}
      variant="mockTokenHelveticaDisplayMedium"
    >
      ERROR_FEEDBACK.TRY_AGAIN.BUTTON_LABEL
    </Text>
  </View>
</View>
`;
